#!/usr/bin/env zsh

# already bootstraped?!
if [ -f $HOME/.arch/bootstrap_done ]
then
  exit 0
fi

if [ ! -f /usr/bin/sudo ]
then 
  echo 'please install sudo and re-run the script'
  exit 1
fi

# base pkgs
echo 'installing base pkgs \n'
sudo pacman -S --needed --noconfirm \
  base-devel \
  htop \
  mc \
  zsh \
  > /dev/null

# yay
echo 'installing yay \n'
test ! -d $HOME/git/yay \
  && mkdir -p $HOME/git \
  && cd $HOME/git \
  && git clone https://aur.archlinux.org/yay.git > /dev/null \
  && cd yay \
  && makepkg -si --needed --noconfirm > /dev/null \
  && cd $HOME

# window manager & system pkgs
echo 'installing window manager & system pkgs \n'
yay -S --needed --noconfirm \
  i3-gaps \
  picom-git \
  hsetroot \
  # alacritty \
  rxvt-unicode \
  pulseaudio \
  xorg-server \
  polybar \
  feh \
  # xorg-xsetroot \
  xorg-xrandr \
  xorg-xinit \
  rofi \
  netctl \
  wifi-menu \
  fstrim \
  bluez \
  bluez-utils \
  > /dev/null

# user pkgs
echo 'installing user pkgs \n'
yay -S --needed --noconfirm \
  vim \
  nodejs \
  npm \
  python \
  python-pip \
  jupyterlab \
  rustup \
  cmake \
  pkgconf \
  gnuplot \
  hugo \
  podman \
  buildah \
  skopeo \
  google-chrome \
  portfolio-performance-bin \
  ripgrep \
  cmus \
  go \
  minikube \
  kubectl \
  helm \
  k9s \
  libvirt \
  qemu-headless \
  > /dev/null

echo 'enabling services \n'
sudo sudo systemctl enable bluetooth.service

echo 'bootstrapping shell environment \n'
# regenerate font cache
fc-cache -f > /dev/null

echo 'bootstrapping programming environments \n'
# rust
rustup component add rust-src

# python / jupyter
jupyter lab build
pip3 install --user jupyter_ascending # vim <-> jupyter sync
jupyter nbextension install jupyter_ascending --user --py \
  && jupyter nbextension enable jupyter_ascending --user --py \
  && jupyter serverextension enable jupyter_ascending --user --py

# go
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
go install google.golang.org/protobuf/cmd/protoc-gen-go@latest

echo 'bootstrapping infrastructure environments \n'

# podman
sudo touch /etc/subuid /etc/subgid
sudo usermod --add-subuids 100000-165535 --add-subgids 100000-165535 $(whoami)
sudo podman system migrate
# sudo echo "$USER ALL=(ALL) NOPASSWD: /usr/bin/podman" >> /etc/sudoers

# minikube (podman driver needs v1.26)
# minikube config set driver podman
minikube config set driver kvm2
# minikube config set rootless true

# libvirt
sudo usermod -a -G libvirt $(whoami)
sudo virsh net-autostart default

# touch file to signal the successfull bootstrap
touch $HOME/.arch/bootstrap_done
