#!/usr/bin/env zsh

# already bootstraped?!
if [ -f $HOME/.arch/bootstrap_done ]
then
  exit 0
fi

if [ ! -f /usr/bin/sudo ]
then 
  echo 'please install sudo and re-run the script'
  exit 1
fi

echo 'start bootstrapping\n'

# base pkgs
echo 'installing base pkgs \n'
sudo pacman -S --needed --noconfirm \
  openssh \
  unzip \
  base-devel \
  zsh \
  &> /dev/null

# yay
echo 'installing yay \n'
test ! -d $HOME/git/yay \
  && mkdir -p $HOME/git \
  && cd $HOME/git \
  && git clone https://aur.archlinux.org/yay.git &> /dev/null \
  && cd yay \
  && makepkg -si --needed --noconfirm &> /dev/null \
  && cd $HOME

# programming languages && tools
echo 'installing developer environment \n'
yay -S --needed --noconfirm \
  tmux \
  neovim \
  nodejs \
  npm \
  dart \
  python \
  python-pip \
  tinygo \
  go \
  ripgrep \
  k9s \
  kubectl \
  aws-cli \
  helm \
  wasmer \
  lazygit \
  mqttui \
  wireshark-cli \
  protobuf \
  &> /dev/null

echo 'configuring developer environment \n'
# git credentials
git config --global user.name "Mats Pfeiffer"
git config --global user.email "mats.pfeiffer@googlemail.com"
# vim
nvim +PlugInstall +qall &> /dev/null
# tmux
tmux start-server &> /dev/null \
  && tmux new-session -d &> /dev/null \
  && ~/.tmux/plugins/tpm/scripts/install_plugins.sh &> /dev/null \
  && tmux kill-server &> /dev/null
# go
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest &> /dev/null
go install google.golang.org/protobuf/cmd/protoc-gen-go@latest &> /dev/null
# dart
dart pub global activate protoc_plugin

if [ ! $DOTFILES_CONTAINER -eq 0 ]
then 
  echo 'bootstrapping finished! have fun.\n'
  touch $HOME/.arch/bootstrap_done
  exit 0
fi

# window manager & system pkgs
echo 'installing window manager & system pkgs \n'
yay -S --needed --noconfirm \
  i3-wm \
  # picom-git \
  hsetroot \
  alacritty \
  # rxvt-unicode \
  pulseaudio \
  xorg-server \
  # polybar \
  # feh \
  # xorg-xsetroot \
  xorg-xrandr \
  xorg-xinit \
  # rofi \
  netctl \
  wifi-menu \
  fstrim \
  bluez \
  bluez-utils \
  &> /dev/null

# user pkgs
echo 'installing user pkgs \n'
yay -S --needed --noconfirm \
  hugo \
  htop \
  mc \
  gotop \
  podman \
  podman-compose \
  buildah \
  skopeo \
  google-chrome \
  minikube \
  libvirt \
  qemu-base \
  &> /dev/null

echo 'enabling services \n'
sudo sudo systemctl enable bluetooth.service

echo 'configuring shell environment \n'
# regenerate font cache
fc-cache -f &> /dev/null

echo 'configuring infrastructure environment \n'

# podman
sudo touch /etc/subuid /etc/subgid
sudo usermod --add-subuids 100000-165535 --add-subgids 100000-165535 $(whoami)
sudo podman system migrate
# sudo echo "$USER ALL=(ALL) NOPASSWD: /usr/bin/podman" >> /etc/sudoers

# minikube (podman driver needs v1.26)
minikube config set driver podman
# minikube config set driver kvm2
# minikube config set rootless true

# libvirt
sudo usermod -a -G libvirt $(whoami)
sudo virsh net-autostart default

# touch file to signal the successfull bootstrap
touch $HOME/.arch/bootstrap_done
